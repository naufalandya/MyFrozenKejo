<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction History</title>
    <link href="/styles/cart.css" rel="stylesheet">
</head>
<body>
    <%- include('partials/_navbar') %>
    <div class="content">

        <h2 style="margin-top: 1rem; border-bottom: 1px solid white; padding-bottom: 0.5rem;">Unpaid</h2>
        <div class="transaction-grid" id="paid-container"></div>

        <h2 style="margin-top: 1rem; border-bottom: 1px solid white; padding-bottom: 0.5rem;">Paid</h2>
        <div class="transaction-grid" id="unpaid-container"></div>
    </div>
    <%- include('partials/_footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const token = localStorage.getItem('token');

            // Fetch Paid Transactions
            fetch('/api/v1/transaction/unpaid', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
            .then(response => response.json())
            .then(transactions => {
                const container = document.getElementById('unpaid-container');
                renderTransactions(transactions, container, true);
            })
            .catch(error => {
                console.error('Error fetching unpaid transactions:', error);
                const container = document.getElementById('unpaid-container');
                container.innerHTML = '<p>An error occurred while fetching unpaid transactions.</p>';
            });

            // Fetch Unpaid Transactions
            fetch('/api/v1/transaction/paid', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
            .then(response => response.json())
            .then(transactions => {
                const container = document.getElementById('paid-container');
                renderTransactions(transactions, container, false);
            })
            .catch(error => {
                console.error('Error fetching paid transactions:', error);
                const container = document.getElementById('paid-container');
                container.innerHTML = '<p>An error occurred while fetching paid transactions.</p>';
            });

            function renderTransactions(transactions, container, isPaid) {
                if (transactions.length > 0) {
                    transactions.forEach(transaction => {
                        const card = document.createElement('div');
                        card.classList.add('transaction-card');

                        const details = document.createElement('div');
                        details.classList.add('transaction-details');

                        let paymentSection = '';
                        if (!isPaid) {
                            paymentSection = `<a href="${transaction.payment_link}" class="pay-button">Pay Now</a>`;
                        } else {
                            paymentSection = `<a href="#" class="pay-button">Already Paid</a>`;
                        }

                        details.innerHTML = `
                            <ul>
                                <li>
                                    <p><strong>Name:</strong> ${transaction.transaksi.produk.nama}</p>
                                    <p><strong>Brand:</strong> ${transaction.transaksi.produk.merk}</p>
                                    <p><strong>Quantity:</strong> ${transaction.transaksi.quantity}</p>
                                    <img src="${transaction.transaksi.produk.foto}" class="product-image">
                                </li>
                            </ul>

                            <p><strong>Status:</strong> ${isPaid ? 'Paid' : 'Unpaid'}</p>
                            <p><strong>Total Price:</strong> ${new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(transaction.total_harga)}</p>
                            ${paymentSection}
                        `;

                        card.appendChild(details);
                        container.appendChild(card);
                    });
                } else {
                    container.innerHTML = '<p>No transactions found.</p>';
                }
            }
        });
    </script>
</body>
</html>
